CREATE DATABASE SERVICE_MARKET
USE SERVICE_MARKET

-----------------------------------------------------------------------------------------------------------------------
/*CREACION DE LA TABLA ROLES*/
CREATE TABLE ROLES(
ID_ROL INT IDENTITY(1,1) PRIMARY KEY,
NOMBRE_ROL VARCHAR(40) NOT NULL)

/*PROCEDIMIENTO ALMACENADO PARA CREAR REGISTROS DE LA TABLA ROLES*/
CREATE PROCEDURE CREAR_ROLES(
@NOMBRE_ROL VARCHAR(40))
AS
BEGIN
	INSERT INTO ROLES(NOMBRE_ROL) VALUES (@NOMBRE_ROL)
END

EXEC CREAR_ROLES 'ADMINISTRADOR'
EXEC CREAR_ROLES 'PRESTADOR_SERVICIOS'
EXEC CREAR_ROLES 'CLIENTE'

/*PROCEDIMIENTO ALMACENADO PARA LEER REGISTROS DE LA TABLA ROLES */
CREATE PROCEDURE LEER_ROLES
AS
BEGIN
	SELECT * FROM ROLES 
END

EXEC LEER_ROLES

/*PROCEDIMIENTO ALMACENADO PARA ACTUALIZAR REGISTROS DE LA TABLA ROLES */
CREATE PROCEDURE ACTUALIZAR_ROLES(
@ID_ROL INT,
@NOMBRE_ROL VARCHAR(40))
AS
BEGIN
	UPDATE ROLES SET NOMBRE_ROL = @NOMBRE_ROL WHERE ID_ROL = @ID_ROL
END

EXEC ACTUALIZAR_ROLES 2,'PRESTADOR DE SERVICIOS'

/*PROCEDIMIENTO ALMACENADO PARA BORRAR REGISTROS DE LA TABLA ROLES */
CREATE PROCEDURE BORRAR_ROLES(
@ID_ROL INT)
AS
BEGIN
	DELETE FROM ROLES WHERE ID_ROL = @ID_ROL
END

-----------------------------------------------------------------------------------------------------------------------

/*CREACION DE LA TABLA CIUDAD*/
CREATE TABLE CIUDAD(
ID_CIUDAD INT PRIMARY KEY IDENTITY(1,1),
NOMBRE_CIUDAD VARCHAR(50) NOT NULL)

/*PROCEDIMIENTO ALMACENADO PARA CREAR REGISTROS DE LA TABLA CIUDAD*/
CREATE PROCEDURE CREAR_CIUDAD(
@NOMBRE_CIUDAD VARCHAR(50))
AS
BEGIN
	INSERT INTO CIUDAD(NOMBRE_CIUDAD) VALUES (@NOMBRE_CIUDAD)
END

EXEC CREAR_ROLES 'MEDELLIN'
EXEC CREAR_ROLES 'CALDAS'
EXEC CREAR_ROLES 'BARBOSA'
EXEC CREAR_ROLES 'SABANETA'
EXEC CREAR_ROLES 'LA ESTRELLA'
EXEC CREAR_ROLES 'ITAGUI'
EXEC CREAR_ROLES 'ENVIGADO'
EXEC CREAR_ROLES 'BELLO'
EXEC CREAR_ROLES 'GIRARDOTA'
EXEC CREAR_ROLES 'COPACABANA'

/*PROCEDIMIENTO ALMACENADO PARA LEER REGISTROS DE LA TABLA CIUDAD */
CREATE PROCEDURE LEER_CIUDAD
AS
BEGIN
	SELECT * FROM CIUDAD 
END

EXEC LEER_CIUDAD

/*PROCEDIMIENTO ALMACENADO PARA ACTUALIZAR REGISTROS DE LA TABLA CIUDAD */
CREATE PROCEDURE ACTUALIZAR_CIUDAD(
@ID_CIUDAD INT,
@NOMBRE_CIUDAD VARCHAR(50))
AS
BEGIN
	UPDATE CIUDAD SET NOMBRE_CIUDAD = @NOMBRE_CIUDAD WHERE ID_CIUDAD = @ID_CIUDAD
END

EXEC ACTUALIZAR_CIUDAD 1,'MEDELLIN'


/*PROCEDIMIENTO ALMACENADO PARA BORRAR REGISTROS DE LA TABLA CIUDAD */
CREATE PROCEDURE BORRAR_CIUDAD(
@ID_CIUDAD INT)
AS
BEGIN
	DELETE FROM CIUDAD WHERE ID_CIUDAD = @ID_CIUDAD
END

-----------------------------------------------------------------------------------------------------------------------

/*CREACION DE LA TABLA USUARIOS*/
CREATE TABLE USUARIOS(
N_IDENTIFICACION VARCHAR(15) PRIMARY KEY,
TIPO_DOC VARCHAR(40) NOT NULL,
FECHA_NACIMIENTO DATE NOT NULL,
FECHA_EXPEDICION DATE NOT NULL,
NOMBRE_USU VARCHAR(60) NOT NULL,
APELLIDOS_USU VARCHAR(70) NOT NULL,
CELULAR_USU VARCHAR(12) NOT NULL,
CORREO_ELECTRONICO VARCHAR(100) NOT NULL,
CONTRASENA VARCHAR(500) NOT NULL,
GENERO VARCHAR(80) NOT NULL,
ID_CIUDAD_FK INT REFERENCES CIUDAD(ID_CIUDAD),
DIRECCION VARCHAR(200) NOT NULL
)

/*PROCEDIMIENTO ALMACENADO PARA CREAR REGISTROS DE LA TABLA USUARIOS*/
CREATE PROCEDURE REGISTRAR_USUARIO(
@TIPO_DOC VARCHAR(40),
@N_IDENTIFICACION VARCHAR(15),
@FECHA_NACIMIENTO DATE,
@FECHA_EXPEDICION DATE,
@NOMBRE_USU VARCHAR(60),
@APELLIDOS_USU VARCHAR(70),
@CELULAR_USU VARCHAR(12),
@GENERO VARCHAR(80),
@ID_CIUDAD_FK INT,
@DIRECCION VARCHAR(200),
@CORREO_ELECTRONICO VARCHAR(100),
@CONTRASENA VARCHAR(500),
@REGISTRADO BIT OUTPUT,
@MENSAJE VARCHAR(100) OUTPUT)
AS 
BEGIN
	IF(NOT EXISTS(SELECT * FROM USUARIOS WHERE CORREO_ELECTRONICO = @CORREO_ELECTRONICO))
	BEGIN 
		INSERT INTO USUARIOS(N_IDENTIFICACION,TIPO_DOC,FECHA_NACIMIENTO,FECHA_EXPEDICION,NOMBRE_USU,APELLIDOS_USU,CELULAR_USU,CORREO_ELECTRONICO,CONTRASENA,GENERO,ID_CIUDAD_FK,DIRECCION)
		VALUES (@N_IDENTIFICACION,@TIPO_DOC,@FECHA_NACIMIENTO,@FECHA_EXPEDICION,@NOMBRE_USU,@APELLIDOS_USU,@CELULAR_USU,@CORREO_ELECTRONICO,@CONTRASENA,@GENERO,@ID_CIUDAD_FK,@DIRECCION)
		SET @REGISTRADO = 1
		SET @MENSAJE = 'Usuario registrado'
	END
	ELSE
	BEGIN
		SET @REGISTRADO = 0
		SET @MENSAJE = 'Correo ya existe'
	END
END

/*DECLARAR VARIABLES DE SALIDA*/
DECLARE @REGISTRADO BIT, @MENSAJE VARCHAR(100)
/*REGISTRO DE ADMINISTRADORES*/
EXEC REGISTRAR_USUARIO 'CEDULA DE CIUDADANIA','1013376602','2004-01-13','2022-01-14','YESENIA','QUEJADA ROJAS','3135293264','FEMENINO',8,'CALLE 22 CARRERA 61 AA 51','yeyerojas1308@gmail.com','a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3',@REGISTRADO OUTPUT,@MENSAJE OUTPUT

/*PROCEDIMIENTO ALMACENADO PARA LEER REGISTROS DE LA TABLA USUARIOS */
CREATE PROCEDURE LEER_USUARIOS
AS
BEGIN
	SELECT * FROM USUARIOS
END 

EXEC LEER_USUARIOS

/*PROCEDIMIENTO ALMACENADO PARA ACTUALIZAR REGISTROS DE LA TABLA USUARIOS */
CREATE PROCEDURE ACTUALIZAR_USUARIOS(
@TIPO_DOC VARCHAR(40),
@N_IDENTIFICACION VARCHAR(15),
@FECHA_NACIMIENTO DATE,
@FECHA_EXPEDICION DATE,
@NOMBRE_USU VARCHAR(60),
@APELLIDOS_USU VARCHAR(70),
@CELULAR_USU VARCHAR(12),
@GENERO VARCHAR(80),
@ID_CIUDAD_FK INT,
@DIRECCION VARCHAR(200),
@CORREO_ELECTRONICO VARCHAR(100),
@CONTRASENA VARCHAR(500))
AS
BEGIN
	UPDATE USUARIOS SET TIPO_DOC = @TIPO_DOC, N_IDENTIFICACION = @N_IDENTIFICACION, FECHA_NACIMIENTO = @FECHA_NACIMIENTO,
	FECHA_EXPEDICION = @FECHA_EXPEDICION, NOMBRE_USU = @NOMBRE_USU, APELLIDOS_USU = @APELLIDOS_USU,
	CELULAR_USU = @CELULAR_USU, GENERO = @GENERO, ID_CIUDAD_FK = @ID_CIUDAD_FK, DIRECCION = @DIRECCION,
	CORREO_ELECTRONICO = @CORREO_ELECTRONICO, CONTRASENA = @CONTRASENA
	WHERE N_IDENTIFICACION = @N_IDENTIFICACION
END

EXEC ACTUALIZAR_USUARIOS 'CEDULA DE CIUDADANIA','1013376602','2004-01-13','2022-01-14','YESENIA','QUEJADA ROJAS','3135293264','FEMENINO',8,'CALLE 22 CARRERA 61 AA 51','YEYEROJAS1308@GMAIL.COM','a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3'

/*PROCEDIMIENTO ALMACENADO PARA BORRAR REGISTROS DE LA TABLA USUARIOS */
CREATE PROCEDURE BORRAR_USAURIOS(
@N_IDENTIFICACION VARCHAR(15))
AS
BEGIN
	DELETE FROM USUARIOS WHERE N_IDENTIFICACION = @N_IDENTIFICACION
END

/*PROCEDIMIENTO ALMACENADO PARA VALIDAR USUARIOS*/
CREATE PROCEDURE VALIDAR_USUARIO(
@CORREO_ELECTRONICO VARCHAR(100),
@CONTRASENA VARCHAR(500))
AS
BEGIN
	IF(EXISTS(SELECT * FROM USUARIOS WHERE CORREO_ELECTRONICO = @CORREO_ELECTRONICO AND CONTRASENA = @CONTRASENA))
		SELECT * FROM USUARIOS WHERE CORREO_ELECTRONICO = @CORREO_ELECTRONICO AND CONTRASENA = @CONTRASENA
	ELSE
		SELECT '0'
END

EXEC VALIDAR_USUARIO 'YEYEROJAS1308@GMAIL.COM','a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3'

-----------------------------------------------------------------------------------------------------------------------

/*CREACION DE LA TABLA INTERMEDIA ASIGNACION_ROL*/
CREATE TABLE ASIGNACION_ROL(
ID_ROL_FK INT REFERENCES ROLES(ID_ROL) DEFAULT 3,
IDENTIFICACION_U_FK VARCHAR(15) REFERENCES USUARIOS(N_IDENTIFICACION)
)

SELECT * FROM ASIGNACION_ROL

-----------------------------------------------------------------------------------------------------------------------

/*CREACION DE LA TABLA CATEGORIAS*/
CREATE TABLE CATEGORIAS(
ID_CATEGORIA INT IDENTITY(1,1) PRIMARY KEY,
NOMBRE_CAT VARCHAR(MAX) NOT NULL,
DESCRIPCION_CAT VARCHAR(MAX) NOT NULL)

/*PROCEDIMIENTO ALMACENADO PARA CREAR REGISTROS DE LA TABLA CATEGORIAS*/
CREATE PROCEDURE CREAR_CATEGORIAS(
@NOMBRE_CAT VARCHAR(MAX),
@DESCRIPCION_CAT VARCHAR(MAX))
AS
BEGIN
	INSERT INTO CATEGORIAS(NOMBRE_CAT,DESCRIPCION_CAT) VALUES (@NOMBRE_CAT,@DESCRIPCION_CAT)
END

EXEC CREAR_CATEGORIAS 'MANTENIMIENTO','ORIENTADA A SOLUCIONAR Y PREVENIR LAS POSIBLES AVERÍAS QUE PUEDA HABER EN EQUIPOS, MÁQUINAS E INSTALACIONES PARA CONSERVAR Y GARANTIZAR SU ÓPTIMO FUNCIONAMIENTO.'
EXEC CREAR_CATEGORIAS 'TRABAJOS DOMÉSTICOS','TODA LA AYUDA DOMÉSTICA QUE NECESITAS EN CASA CON EXPERTAS EN ORDEN, LIMPIEZA Y DESINFECCIÓN.'
EXEC CREAR_CATEGORIAS 'REMODELACIÓN Y ALBAÑILERÍA','ORIENTADA EN LA CONSTRUCCIÓN, RENOVACIÓN Y REPARACIÓN DE ESTRUCTURAS, PAREDES, MUROS, PARTES DE EDIFICIOS, CASAS Y MÁS.'
EXEC CREAR_CATEGORIAS 'SALUD Y BELLEZA','ORIENTADA A LA PRESTACIÓN DE SERVICIOS DESDE LOS DIFERENTES CAMPOS DE LA SALUD Y LA BELLEZA COMO LO SON CORTES, PEINADOS, MAQUILLAJES, MANICURE, PEDICURA, MASAJES, ETC.'

/*PROCEDIMIENTO ALMACENADO PARA LEER REGISTROS DE LA TABLA CATEGORIAS */
CREATE PROCEDURE LEER_CATEGORIAS
AS
BEGIN
	SELECT * FROM CATEGORIAS 
END

EXEC LEER_CATEGORIAS

/*PROCEDIMIENTO ALMACENADO PARA ACTUALIZAR REGISTROS DE LA TABLA CATEGORIAS */
CREATE PROCEDURE ACTUALIZAR_CATEGORIAS(
@ID_CATEGORIA INT,
@NOMBRE_CAT VARCHAR(MAX),
@DESCRIPCION_CAT VARCHAR(MAX))
AS
BEGIN
	UPDATE CATEGORIAS SET NOMBRE_CAT = @NOMBRE_CAT, DESCRIPCION_CAT = @DESCRIPCION_CAT WHERE ID_CATEGORIA = @ID_CATEGORIA
END

EXEC ACTUALIZAR_CATEGORIAS 1, 'MANTENIMIENTOO', 'ORIENTADA A SOLUCIONAR Y PREVENIR LAS POSIBLES AVERÍAS QUE PUEDA HABER EN EQUIPOS, MÁQUINAS E INSTALACIONES PARA CONSERVAR Y GARANTIZAR SU ÓPTIMO FUNCIONAMIENTO.'


/*PROCEDIMIENTO ALMACENADO PARA BORRAR REGISTROS DE LA TABLA CATEGORIAS */
CREATE PROCEDURE BORRAR_CATEGORIAS(
@ID_CATEGORIA INT)
AS
BEGIN
	DELETE FROM CATEGORIAS WHERE ID_CATEGORIA = @ID_CATEGORIA
END

EXEC BORRAR_CATEGORIAS 2
-----------------------------------------------------------------------------------------------------------------------
 
/*CREACION DE LA TABLA SERVICIOS*/
CREATE TABLE SERVICIOS(
ID_SERVICIO INT IDENTITY(1,1) PRIMARY KEY,
NOMBRE_SER VARCHAR(70) NOT NULL,
PRECIO_SER DECIMAL NOT NULL,
DESCRIPCION_BREVE VARCHAR(500) NOT NULL,
TERMINOS_SER VARCHAR(MAX) NOT NULL,
ID_CATEGORIA_FK INT REFERENCES CATEGORIAS(ID_CATEGORIA)
)

/*PROCEDIMIENTO ALMACENADO PARA CREAR REGISTROS DE LA TABLA SERVICIOS*/
CREATE PROCEDURE CREAR_SERVICIOS(
@NOMBRE_SER VARCHAR(70),
@PRECIO_SER DECIMAL,
@DESCRIPCION_BREVE VARCHAR(500),
@TERMINOS_SER VARCHAR(MAX),
@ID_CATEGORIA_FK INT
)
AS 
BEGIN
	INSERT INTO SERVICIOS(NOMBRE_SER,PRECIO_SER,DESCRIPCION_BREVE,TERMINOS_SER,ID_CATEGORIA_FK) 
	VALUES (@NOMBRE_SER,@PRECIO_SER,@DESCRIPCION_BREVE,@TERMINOS_SER,@ID_CATEGORIA_FK)
END

EXEC CREAR_SERVICIOS 'Limpieza a vapor baños y cocina',192500,'Realizamos aseo a profundidad de tus baños y cocina. Quitamos la grasa y gérmenes con equipos y productos especializados, removiendo grasas y desinfectando a profundidad los espacios.',
'Al tomar el servicio, debes tener los espacios desocupados para el servicio especialmente las alacenas de las cocinas y cajones con el fin de evitar cualquier daño y alterar el tiempo del servicio.',
2

/*PROCEDIMIENTO ALMACENADO PARA LEER REGISTROS DE LA TABLA SERVICIOS */
CREATE PROCEDURE LEER_SERVICIOS
AS
BEGIN
	SELECT * FROM SERVICIOS 
END

EXEC LEER_SERVICIOS

/*PROCEDIMIENTO ALMACENADO PARA ACTUALIZAR REGISTROS DE LA TABLA SERVICIOS */
CREATE PROCEDURE ACTUALIZAR_SERVICIOS(
@ID_SERVICIO INT,
@NOMBRE_SER VARCHAR(70),
@PRECIO_SER DECIMAL,
@DESCRIPCION_BREVE VARCHAR(500),
@TERMINOS_SER VARCHAR(MAX),
@ID_CATEGORIA_FK INT
)
AS
BEGIN
	UPDATE SERVICIOS SET NOMBRE_SER = @NOMBRE_SER, PRECIO_SER = @PRECIO_SER, DESCRIPCION_BREVE = @DESCRIPCION_BREVE,
	TERMINOS_SER = @TERMINOS_SER, ID_CATEGORIA_FK = @ID_CATEGORIA_FK WHERE ID_SERVICIO = @ID_SERVICIO
END

/*PROCEDIMIENTO ALMACENADO PARA BORRAR REGISTROS DE LA TABLA SERVICIOS */
CREATE PROCEDURE BORRAR_SERVICIOS(
@ID_SERVICIO INT)
AS
BEGIN
	DELETE FROM SERVICIOS WHERE ID_SERVICIO = @ID_SERVICIO
END

/*PROCEDIMIENTO ALMACENADO PARA CONSULTAR SERVICIOS INNER JOIN CON TABLA CATEGORIAS*/
CREATE PROCEDURE CONSULTAR_SERVICIOS
AS 
BEGIN
	SELECT ID_SERVICIO, NOMBRE_SER, PRECIO_SER, DESCRIPCION_BREVE, NOMBRE_CAT FROM 
	SERVICIOS INNER JOIN CATEGORIAS 
	ON SERVICIOS.ID_CATEGORIA_FK = CATEGORIAS.ID_CATEGORIA
END

EXEC CONSULTAR_SERVICIOS

/*PROCEDIMIENTO ALMACENADO PARA BUSCAR SERVICIOS POR NOMBRE*/
CREATE PROCEDURE BUSQUEDAD_SERVICIOS(
@NOMBRE_SER VARCHAR(70))
AS
BEGIN
	SELECT NOMBRE_SER, PRECIO_SER,DESCRIPCION_BREVE, NOMBRE_CAT FROM 
	SERVICIOS INNER JOIN CATEGORIAS 
	ON SERVICIOS.ID_CATEGORIA_FK = CATEGORIAS.ID_CATEGORIA
	WHERE NOMBRE_SER LIKE '%'+@NOMBRE_SER+'%'
END

EXEC BUSQUEDAD_SERVICIOS 'Limpieza'

-----------------------------------------------------------------------------------------------------------------------

/*CREACION DE LA TABLA DETALLE_SERVICIOS(PUBLICACION)*/
CREATE TABLE DETALLE_SERVICIOS(
ID_SERVICIO_FK INT REFERENCES SERVICIOS(ID_SERVICIO),
IDENTIFICACION_U_FK VARCHAR(15) REFERENCES USUARIOS(N_IDENTIFICACION),
FECHA_INICIO DATE NOT NULL DEFAULT GETDATE(),
ESTADO_DS VARCHAR(20) DEFAULT 'ACTIVO')

/*PROCEDIMIENTO ALMACENADO PARA CREAR REGISTROS DE LA TABLA DETALLE_SERVICIOS*/
CREATE PROCEDURE CREAR_DETALLE_SERVICIOS(
@ID_SERVICIO_FK INT,
@IDENTIFICACION_U_FK VARCHAR(15),
@FECHA_INICIO DATE)
AS
BEGIN
	INSERT INTO DETALLE_SERVICIOS(ID_SERVICIO_FK,IDENTIFICACION_U_FK,FECHA_INICIO) VALUES 
	(@ID_SERVICIO_FK,@IDENTIFICACION_U_FK,@FECHA_INICIO)
END

EXEC CREAR_DETALLE_SERVICIOS 1, 1013376602, '2022-11-20'

/*PROCEDIMIENTO ALMACENADO PARA LEER REGISTROS DE LA TABLA DETALLE_SERVICIOS */
CREATE PROCEDURE LEER_DETALLE_SERVICIOS
AS
BEGIN
	SELECT * FROM DETALLE_SERVICIOS
END

EXEC LEER_DETALLE_SERVICIOS

/*PROCEDIMIENTO ALMACENADO PARA ACTUALIZAR REGISTROS DE LA TABLA DETALLE_SERVICIOS */
CREATE PROCEDURE ACTUALIZAR_DETALLE_SERVICIOS(
@ID_SERVICIO_FK INT,
@FECHA_INICIO DATE,
@ESTADO_DS VARCHAR(20))
AS
BEGIN
	UPDATE DETALLE_SERVICIOS SET FECHA_INICIO = @FECHA_INICIO, ESTADO_DS = @ESTADO_DS 
	WHERE ID_SERVICIO_FK = @ID_SERVICIO_FK
END

EXEC ACTUALIZAR_DETALLE_SERVICIOS 1,'2022-11-20', 'ACTIVO'

----------------------------------------------------------------------------------------------------------------------

/*VISTA MAS INFORMACION SOBRE LA PUBLICACION DEL SERVICIO
TABLAS: DETALLE_SERVICIOS // SERVICIOS // CATEGORIAS // USUARIOS*/
CREATE VIEW PUBLICACION_SERVICIOS 
AS
SELECT FECHA_INICIO, ESTADO_DS, ID_SERVICIO, NOMBRE_SER, PRECIO_SER, DESCRIPCION_BREVE, 
TERMINOS_SER, NOMBRE_CAT, NOMBRE_USU, APELLIDOS_USU, CELULAR_USU, CORREO_ELECTRONICO, NOMBRE_CIUDAD
FROM
DETALLE_SERVICIOS INNER JOIN SERVICIOS 
ON DETALLE_SERVICIOS.ID_SERVICIO_FK = SERVICIOS.ID_SERVICIO 
INNER JOIN CATEGORIAS 
ON SERVICIOS.ID_CATEGORIA_FK = CATEGORIAS.ID_CATEGORIA
INNER JOIN USUARIOS
ON DETALLE_SERVICIOS.IDENTIFICACION_U_FK = USUARIOS.N_IDENTIFICACION
INNER JOIN CIUDAD
ON USUARIOS.ID_CIUDAD_FK = CIUDAD.ID_CIUDAD WHERE ESTADO_DS = 'ACTIVO'

/*PROCEDIMIENTO ALMACENADO PARA CONSULTAR VISTA PUBLICACION SERVICIOS*/
CREATE PROCEDURE CONSULTAR_PUBLICACION(
@ID_SERVICIO INT)
AS
BEGIN
	SELECT * FROM PUBLICACION_SERVICIOS WHERE ID_SERVICIO = @ID_SERVICIO
END

EXEC CONSULTAR_PUBLICACION 1

/*REINICIAR CONTADOR DEL ID*/
DBCC CHECKIDENT (ROLES, RESEED, 0)
