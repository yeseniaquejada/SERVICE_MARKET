/*INSERT TABLA CATEGORIAS*/
INSERT INTO CATEGORIAS(NOMBRE_CAT,DESCRIPCION) VALUES ('LIMPIEZA','SERVICIO DE LIMPIEZA POR DIAS-MESES-AÑOS')
INSERT INTO CATEGORIAS(NOMBRE_CAT,DESCRIPCION) VALUES ('MANTENIMIENTO','MANTENIMIENTO PARA TUS EQUIPOS COMO LO SON LIMPIEZA,REPARACION,GENERAL,PREVENTIVO,ETC.')
INSERT INTO CATEGORIAS(NOMBRE_CAT,DESCRIPCION) VALUES ('CONSTRUCCION','TRABAJO DE PREEDIFICACION, CONSTRUCCION Y REPARACION, ALTERACION, RESTAURACION Y TRABAJO DE MANTENIMIENTO A CONSTRUCCIONES RESIDENCIALES,CONSTRUCCIONES NO RESIDENCIALES O TRABAJOS DE INGENIERIA CIL.')


/*CREACION DE LA TABLA FACTURAS*/
CREATE TABLE FACTURAS(
N_FACTURA INT IDENTITY(1,1) PRIMARY KEY,
FECHA DATE NOT NULL,
HORA TIME NOT NULL,
TOTAL DECIMAL NOT NULL,
ID_USUARIO_FK INT REFERENCES USUARIOS(ID_USUARIO)
)

/*CREACION DE LA TABLA DETALLE_FACTURAS*/
CREATE TABLE DETALLE_FACTURAS(
ID_SERVICIO_FK INT REFERENCES SERVICIOS(ID_SERVICIO),
N_FACTURA_FK INT REFERENCES FACTURAS(N_FACTURA),
CANTIDAD INT NOT NULL,
PRECIO DECIMAL NOT NULL,
SUBTOTAL DECIMAL NOT NULL,
COMISION DECIMAL NOT NULL,
CALIFICACION INT NOT NULL,
COMENTARIOS VARCHAR(MAX)
)

/*PROCEDIMIENTO ALMACENADO PARA CONSULTAR SERVICIOS - INNER JOIN RELACIONAR TABLA CATEGORIAS Y SERVICIOS*/
CREATE PROCEDURE CONSULTAR_SERVICIOS
AS
BEGIN
	SELECT NOMBRE_CAT,IMAGEN,NOMBRE,PRECIO,TERMINOS FROM CATEGORIAS INNER JOIN SERVICIOS
	ON CATEGORIAS.ID_CATEGORIA = SERVICIOS.ID_CATEGORIA_FK
END

EXEC CONSULTAR_SERVICIOS


USE [CINEMA]

CREATE TABLE [HISTORIAL_ACTOR](
	[ID_ACTOR] [int] NULL,
	[NOMBRES_ACT] [varchar](30) NOT NULL,
	[APELLIDOS] [varchar](30) NOT NULL,
	[TELEFONO_ACT] [varchar](12) NULL,
	[PAIS] [varchar](25) NULL,
	[ID_MANA] [int] NULL)

CREATE TRIGGER TR_DEVOLUCION_PRESTAMOS
ON ACTOR FOR DELETE 
AS 
BEGIN 
INSERT INTO HISTORIAL_ACTOR
SELECT * FROM deleted
END 
GO
 

SELECT * FROM HISTORIAL_ACTOR



/*FUNCION PARA ENCRIPTAR CONTRASEÑA*/
CREATE FUNCTION ENCRIPTAR(@CONTRASENA VARCHAR(500))
RETURNS VARBINARY(500) 
AS 
BEGIN
DECLARE @PASS AS VARBINARY(500);
SET @PASS = ENCRYPTBYPASSPHRASE('CONTRASENA', @CONTRASENA);
RETURN @PASS;
END;

/*FUNCION PARA DESENCRIPTAR CONTRASEÑA*/
CREATE FUNCTION DESENCRIPTAR(@CONTRASENA VARBINARY(500))
RETURNS VARCHAR(500) 
AS 
BEGIN
DECLARE @PASS AS VARCHAR(MAX);
SET @PASS = DECRYPTBYPASSPHRASE('CONTRASENA', @CONTRASENA);
RETURN @PASS;
END;



/*CREACION DE TABLA HISTORIAL_DETALLE_SERVICIOS*/
CREATE TABLE HISTORIAL_DETALLE_SERVICIOS(
	[ID_SERVICIO_FK] [int] NULL,
	[ID_USUARIO_FK] [int] NULL,
	[FECHA_INICIO] [date] NOT NULL,
	[FECHA_FIN] [date] NOT NULL) 
GO

/*DISPARADOR - GUARDAR EL HISTORIAL DE SERVICIOS ELIMINADOS POR EL PROVEEDOR*/
CREATE TRIGGER TR_HISTORIAL_SERVICIOS
ON DETALLE_SERVICIOS FOR DELETE 
AS 
BEGIN 
INSERT INTO HISTORIAL_DETALLE_SERVICIOS
SELECT * FROM DELETED
END 
GO